// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: common/enums.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 国家类型
type Country int32

const (
	Country_CT_All         Country = 0  //所有国家
	Country_CT_Thailand    Country = 1  //泰国
	Country_CT_Indonesia   Country = 2  //印尼
	Country_CT_Vietnam     Country = 3  //越南
	Country_CT_Malaysia    Country = 4  //马来西亚
	Country_CT_China       Country = 5  //中国
	Country_CT_Taiwan      Country = 6  //台湾
	Country_CT_Macao       Country = 7  //澳门
	Country_CT_HongKong    Country = 8  //香港
	Country_CT_Singapore   Country = 9  //新加坡
	Country_CT_Cambodia    Country = 10 //柬埔寨
	Country_CT_India       Country = 11 //印度
	Country_CT_Japan       Country = 12 //日本
	Country_CT_Laos        Country = 13 //老挝
	Country_CT_Philippines Country = 14 //菲律宾
	Country_CT_Myanmar     Country = 15 //缅甸
)

// Enum value maps for Country.
var (
	Country_name = map[int32]string{
		0:  "CT_All",
		1:  "CT_Thailand",
		2:  "CT_Indonesia",
		3:  "CT_Vietnam",
		4:  "CT_Malaysia",
		5:  "CT_China",
		6:  "CT_Taiwan",
		7:  "CT_Macao",
		8:  "CT_HongKong",
		9:  "CT_Singapore",
		10: "CT_Cambodia",
		11: "CT_India",
		12: "CT_Japan",
		13: "CT_Laos",
		14: "CT_Philippines",
		15: "CT_Myanmar",
	}
	Country_value = map[string]int32{
		"CT_All":         0,
		"CT_Thailand":    1,
		"CT_Indonesia":   2,
		"CT_Vietnam":     3,
		"CT_Malaysia":    4,
		"CT_China":       5,
		"CT_Taiwan":      6,
		"CT_Macao":       7,
		"CT_HongKong":    8,
		"CT_Singapore":   9,
		"CT_Cambodia":    10,
		"CT_India":       11,
		"CT_Japan":       12,
		"CT_Laos":        13,
		"CT_Philippines": 14,
		"CT_Myanmar":     15,
	}
)

func (x Country) Enum() *Country {
	p := new(Country)
	*p = x
	return p
}

func (x Country) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Country) Descriptor() protoreflect.EnumDescriptor {
	return file_common_enums_proto_enumTypes[0].Descriptor()
}

func (Country) Type() protoreflect.EnumType {
	return &file_common_enums_proto_enumTypes[0]
}

func (x Country) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Country.Descriptor instead.
func (Country) EnumDescriptor() ([]byte, []int) {
	return file_common_enums_proto_rawDescGZIP(), []int{0}
}

type Language int32

const (
	Language_LG_Invalid    Language = 0 //无效
	Language_LG_Thai       Language = 1 //泰语
	Language_LG_Indonesian Language = 2 //印尼语
	Language_LG_English    Language = 3 //英语
	Language_LG_Vietnamese Language = 4 //越南语
	Language_LG_Chinese    Language = 5 // 中文
	Language_LG_Malaysia   Language = 6 // 马来文
)

// Enum value maps for Language.
var (
	Language_name = map[int32]string{
		0: "LG_Invalid",
		1: "LG_Thai",
		2: "LG_Indonesian",
		3: "LG_English",
		4: "LG_Vietnamese",
		5: "LG_Chinese",
		6: "LG_Malaysia",
	}
	Language_value = map[string]int32{
		"LG_Invalid":    0,
		"LG_Thai":       1,
		"LG_Indonesian": 2,
		"LG_English":    3,
		"LG_Vietnamese": 4,
		"LG_Chinese":    5,
		"LG_Malaysia":   6,
	}
)

func (x Language) Enum() *Language {
	p := new(Language)
	*p = x
	return p
}

func (x Language) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Language) Descriptor() protoreflect.EnumDescriptor {
	return file_common_enums_proto_enumTypes[1].Descriptor()
}

func (Language) Type() protoreflect.EnumType {
	return &file_common_enums_proto_enumTypes[1]
}

func (x Language) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Language.Descriptor instead.
func (Language) EnumDescriptor() ([]byte, []int) {
	return file_common_enums_proto_rawDescGZIP(), []int{1}
}

// 维护状态
type MainStatus int32

const (
	MainStatus_MS_Closed MainStatus = 0 // 维护关闭
	MainStatus_MS_Open   MainStatus = 1 // 维护打开
)

// Enum value maps for MainStatus.
var (
	MainStatus_name = map[int32]string{
		0: "MS_Closed",
		1: "MS_Open",
	}
	MainStatus_value = map[string]int32{
		"MS_Closed": 0,
		"MS_Open":   1,
	}
)

func (x MainStatus) Enum() *MainStatus {
	p := new(MainStatus)
	*p = x
	return p
}

func (x MainStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MainStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_common_enums_proto_enumTypes[2].Descriptor()
}

func (MainStatus) Type() protoreflect.EnumType {
	return &file_common_enums_proto_enumTypes[2]
}

func (x MainStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MainStatus.Descriptor instead.
func (MainStatus) EnumDescriptor() ([]byte, []int) {
	return file_common_enums_proto_rawDescGZIP(), []int{2}
}

var File_common_enums_proto protoreflect.FileDescriptor

var file_common_enums_proto_rawDesc = []byte{
	0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2a, 0x85, 0x02, 0x0a,
	0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x54, 0x5f, 0x41,
	0x6c, 0x6c, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x54, 0x5f, 0x54, 0x68, 0x61, 0x69, 0x6c,
	0x61, 0x6e, 0x64, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x54, 0x5f, 0x49, 0x6e, 0x64, 0x6f,
	0x6e, 0x65, 0x73, 0x69, 0x61, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x54, 0x5f, 0x56, 0x69,
	0x65, 0x74, 0x6e, 0x61, 0x6d, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x54, 0x5f, 0x4d, 0x61,
	0x6c, 0x61, 0x79, 0x73, 0x69, 0x61, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x54, 0x5f, 0x43,
	0x68, 0x69, 0x6e, 0x61, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x54, 0x5f, 0x54, 0x61, 0x69,
	0x77, 0x61, 0x6e, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x54, 0x5f, 0x4d, 0x61, 0x63, 0x61,
	0x6f, 0x10, 0x07, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x54, 0x5f, 0x48, 0x6f, 0x6e, 0x67, 0x4b, 0x6f,
	0x6e, 0x67, 0x10, 0x08, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x54, 0x5f, 0x53, 0x69, 0x6e, 0x67, 0x61,
	0x70, 0x6f, 0x72, 0x65, 0x10, 0x09, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x54, 0x5f, 0x43, 0x61, 0x6d,
	0x62, 0x6f, 0x64, 0x69, 0x61, 0x10, 0x0a, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x54, 0x5f, 0x49, 0x6e,
	0x64, 0x69, 0x61, 0x10, 0x0b, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x54, 0x5f, 0x4a, 0x61, 0x70, 0x61,
	0x6e, 0x10, 0x0c, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x54, 0x5f, 0x4c, 0x61, 0x6f, 0x73, 0x10, 0x0d,
	0x12, 0x12, 0x0a, 0x0e, 0x43, 0x54, 0x5f, 0x50, 0x68, 0x69, 0x6c, 0x69, 0x70, 0x70, 0x69, 0x6e,
	0x65, 0x73, 0x10, 0x0e, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x54, 0x5f, 0x4d, 0x79, 0x61, 0x6e, 0x6d,
	0x61, 0x72, 0x10, 0x0f, 0x2a, 0x7e, 0x0a, 0x08, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x12, 0x0e, 0x0a, 0x0a, 0x4c, 0x47, 0x5f, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x4c, 0x47, 0x5f, 0x54, 0x68, 0x61, 0x69, 0x10, 0x01, 0x12, 0x11, 0x0a,
	0x0d, 0x4c, 0x47, 0x5f, 0x49, 0x6e, 0x64, 0x6f, 0x6e, 0x65, 0x73, 0x69, 0x61, 0x6e, 0x10, 0x02,
	0x12, 0x0e, 0x0a, 0x0a, 0x4c, 0x47, 0x5f, 0x45, 0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68, 0x10, 0x03,
	0x12, 0x11, 0x0a, 0x0d, 0x4c, 0x47, 0x5f, 0x56, 0x69, 0x65, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x65, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x4c, 0x47, 0x5f, 0x43, 0x68, 0x69, 0x6e, 0x65, 0x73,
	0x65, 0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x47, 0x5f, 0x4d, 0x61, 0x6c, 0x61, 0x79, 0x73,
	0x69, 0x61, 0x10, 0x06, 0x2a, 0x28, 0x0a, 0x0a, 0x4d, 0x61, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x4d, 0x53, 0x5f, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x53, 0x5f, 0x4f, 0x70, 0x65, 0x6e, 0x10, 0x01, 0x42, 0x55,
	0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x65, 0x74,
	0x65, 0x72, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2f, 0x73, 0x70, 0x67, 0x73, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x3b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0xaa, 0x02, 0x22, 0x48, 0x61, 0x6c, 0x6c, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x79, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_enums_proto_rawDescOnce sync.Once
	file_common_enums_proto_rawDescData = file_common_enums_proto_rawDesc
)

func file_common_enums_proto_rawDescGZIP() []byte {
	file_common_enums_proto_rawDescOnce.Do(func() {
		file_common_enums_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_enums_proto_rawDescData)
	})
	return file_common_enums_proto_rawDescData
}

var file_common_enums_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_common_enums_proto_goTypes = []interface{}{
	(Country)(0),    // 0: common.Country
	(Language)(0),   // 1: common.Language
	(MainStatus)(0), // 2: common.MainStatus
}
var file_common_enums_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_common_enums_proto_init() }
func file_common_enums_proto_init() {
	if File_common_enums_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_enums_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_enums_proto_goTypes,
		DependencyIndexes: file_common_enums_proto_depIdxs,
		EnumInfos:         file_common_enums_proto_enumTypes,
	}.Build()
	File_common_enums_proto = out.File
	file_common_enums_proto_rawDesc = nil
	file_common_enums_proto_goTypes = nil
	file_common_enums_proto_depIdxs = nil
}
